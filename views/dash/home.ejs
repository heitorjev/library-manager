<!DOCTYPE html>
<html lang="pt-BR">
<head>
    
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard da Biblioteca</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.6.0/fonts/remixicon.css" rel="stylesheet">
    <link rel="stylesheet" href="../css/dash.css">
    <style>
        .user-dropdown {
            display: none;
            position: absolute;
            bottom: 100%;
            left: 0;
            right: 0;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 8px 0;
        }

        .user-dropdown.open {
            display: block;
        }
        
        .user-info {
            position: relative;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        
        <main class="main-content">
            <div class="top-bar">
                <button class="menu-toggle" id="menu-toggle" aria-label="menu">
                    <div class="hamburger">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </button>
            </div>
            <%- include('partials/menu.ejs') -%>
            <div class="dashboard-cards">
                <div class="card">
                    <div class="card-title">Total de Livros</div>
                    <div class="card-value"><%= books %></div>
                </div>
                <div class="card">
                    <div class="card-title">Alunos Ativos</div>
                    <div class="card-value"><%= students %></div>
                </div>
                <div class="card">
                    <div class="card-title">Empr√©stimos Ativos</div>
                    <div class="card-value"><%= lending %></div>
                </div>
            </div>
            <div class="recent-activities">
                <h2 class="activities-title">Atividades Recentes</h2>
                <ul class="activity-list">
                    <% if (actions && actions.length > 0) { %>
                        <% actions.forEach(activity => { %>
                            <li class="activity-item">
                                <div class="activity-icon">
                                    <% if (activity.action_target === 'user' && activity.action_type === "create") { %>
                                        <i class="ri-user-add-line"></i>
                                    <% } else if (activity.action_target === 'user' && activity.action_type === "update") { %>
                                        <i class="ri-user-settings-line"></i>
                                    <% } else if (activity.action_target === 'user' && activity.action_type === "delete") { %>
                                        <i class="ri-user-minus-line"></i>
                                    <% } else if (activity.action_target === 'book' && activity.action_type === "create") { %>
                                        <i class="ri-book-3-line"></i>
                                    <% } else if (activity.action_target === 'book' && activity.action_type === "update") { %>
                                        <i class="ri-book-3-line"></i>
                                    <% } else if (activity.action_target === 'book' && activity.action_type === "delete") { %>
                                        <i class="ri-book-3-line"></i>
                                    <% } else if (activity.action_target === 'lending' && activity.action_type === "create") { %>
                                        <i class="ri-arrow-go-forward-fill"></i>
                                    <% } else if (activity.action_target === 'lending' && activity.action_type === "delete") {%>
                                        <i class="ri-arrow-go-back-line"></i>
                                    <% } %>
                                </div>
                                <div class="activity-details">
                                    <div class="activity-title"><%= activity.action %></div>
                                    <div class="activity-time"><%= new Date(activity.action_date).toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' }) %></div>
                                </div>
                            </li>
                        <% }) %>
                    <% } else { %>
                        <li class="activity-item no-activities">
                            <div class="activity-details">
                                <div class="activity-title">Nenhuma atividade recente</div>
                            </div>
                        </li>
                    <% } %>
                </ul>
                <a href="/dash/actions" class="more">Ver todos</a>
            </div>
        </main>
    </div>

    <script>
        // Toggle sidebar
        const menuToggle = document.getElementById('menu-toggle');
        const sidebar = document.querySelector('.sidebar');
        const mainContent = document.querySelector('.main-content');

        menuToggle.addEventListener('click', () => {
            sidebar.classList.toggle('open');
            menuToggle.classList.toggle('open');
        });

        // Toggle submenus
        const menuLinks = document.querySelectorAll('.menu-link.has-submenu');

        menuLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const submenu = link.nextElementSibling;
                submenu.classList.toggle('open');
            });
        });

        // Handle active menu items
        const allMenuLinks = document.querySelectorAll('.menu-link, .submenu-link');

        allMenuLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                document.querySelector('.menu-link.active')?.classList.remove('active');
                
                if (this.classList.contains('submenu-link')) {
                    this.closest('.menu-item').querySelector('.menu-link').classList.add('active');
                } else {
                    this.classList.add('active');
                }
            });
        });

        // Toggle user dropdown
        const userMenuToggle = document.getElementById('user-menu-toggle');
        const userDropdown = document.getElementById('user-dropdown');
        let isDropdownOpen = false;

        function toggleDropdown() {
            isDropdownOpen = !isDropdownOpen;
            userDropdown.classList.toggle('open', isDropdownOpen);
        }

        function closeDropdown() {
            isDropdownOpen = false;
            userDropdown.classList.remove('open');
        }

        userMenuToggle.addEventListener('click', (e) => {
            e.stopPropagation();
            toggleDropdown();
        });

        document.addEventListener('click', (e) => {
            const isClickInside = userDropdown.contains(e.target) || userMenuToggle.contains(e.target);
            if (!isClickInside && isDropdownOpen) {
                closeDropdown();
            }
        });

        // Close dropdown when pressing Escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                userDropdown.classList.remove('open');
            }
        });

        // Add keyboard navigation for dropdown
        userDropdown.addEventListener('keydown', (e) => {
            const items = userDropdown.querySelectorAll('.user-dropdown-item');
            const currentIndex = Array.from(items).indexOf(document.activeElement);

            if (e.key === 'ArrowDown') {
                e.preventDefault();
                const nextIndex = (currentIndex + 1) % items.length;
                items[nextIndex].focus();
            } else if (e.key === 'ArrowUp') {
                e.preventDefault();
                const prevIndex = (currentIndex - 1 + items.length) % items.length;
                items[prevIndex].focus();
            }
        });
    </script>
</body>
</html>